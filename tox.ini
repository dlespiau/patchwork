[tox]
minversion = 1.6
envlist = py{27,36}-django111, pep8
skipsdist = True

[testenv]
deps =
    -r{toxinidir}/docs/requirements-dev.txt
    mysqlclient>=1.3.0,<1.4
    django111: django>=1.11,<1.12
setenv =
    DJANGO_SETTINGS_MODULE = patchwork.settings.dev
passenv =
    http_proxy HTTP_PROXY https_proxy HTTPS_PROXY no_proxy NO_PROXY
    PW_TEST_DB_HOST PW_TEST_DB_TYPE PW_TEST_DB_USER PW_TEST_DB_PASS
    DISPLAY PATCHWORK_SKIP_BROWSER_TESTS SELENIUM_BROWSER CHROME_BIN
commands =
    {toxinidir}/manage.py test --noinput '{posargs:patchwork}'

[testenv:pep8]
basepython = python3.6
deps = flake8
commands = flake8 {posargs:patchwork patchwork/bin/pwclient git-pw/git-pw}

[flake8]
ignore = E121,E122,E123,E124,E125,E126,E127,E128,E129,E131,E203,E241,E251,E402,H405,F405,W504
exclude = ./patchwork/migrations

[testenv:lint]
basepython = python3.6
deps =
    pylint
    pylint-django
    -r{toxinidir}/docs/requirements-prod-mysql.txt
commands = pylint --rcfile=pylint.rc --load-plugins pylint_django {posargs:patchwork}

[testenv:venv]
commands = {posargs}

[testenv:coverage]
basepython = python2.7
deps =
    coverage
    -r{toxinidir}/docs/requirements-prod-mysql.txt
setenv =
    DJANGO_SETTINGS_MODULE = patchwork.settings.dev
commands =
    coverage erase
    coverage run --omit=*tox*,patchwork/tests/*.py,manage.py --branch \
        {toxinidir}/manage.py test --noinput patchwork
    coverage report -m
